//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace LabelDemo.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LabelsInfoPortBinding", Namespace="http://yourcompany.com/")]
    public partial class LabelsInfoService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public System.Threading.SendOrPostCallback sayHiOperationCompleted;
        
        public System.Threading.SendOrPostCallback getLabelInfoOperationCompleted;
        
        public System.Threading.SendOrPostCallback updateLabelInfoOperationCompleted;
        
        public bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LabelsInfoService() {
            this.Url = global::LabelDemo.Properties.Settings.Default.LabelDemo_localhost_LabelsInfoService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event sayHiCompletedEventHandler sayHiCompleted;
        
        /// <remarks/>
        public event getLabelInfoCompletedEventHandler getLabelInfoCompleted;
        
        /// <remarks/>
        public event updateLabelInfoCompletedEventHandler updateLabelInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://yourcompany.com/", ResponseNamespace="http://yourcompany.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string sayHi() {
            object[] results = this.Invoke("sayHi", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sayHiAsync() {
            this.sayHiAsync(null);
        }
        
        /// <remarks/>
        public void sayHiAsync(object userState) {
            if ((this.sayHiOperationCompleted == null)) {
                this.sayHiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsayHiOperationCompleted);
            }
            this.InvokeAsync("sayHi", new object[0], this.sayHiOperationCompleted, userState);
        }
        
        public void OnsayHiOperationCompleted(object arg) {
            if ((this.sayHiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sayHiCompleted(this, new sayHiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://yourcompany.com/", ResponseNamespace="http://yourcompany.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getLabelInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("getLabelInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLabelInfoAsync(string arg0) {
            this.getLabelInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void getLabelInfoAsync(string arg0, object userState) {
            if ((this.getLabelInfoOperationCompleted == null)) {
                this.getLabelInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLabelInfoOperationCompleted);
            }
            this.InvokeAsync("getLabelInfo", new object[] {
                        arg0}, this.getLabelInfoOperationCompleted, userState);
        }
        
        public void OngetLabelInfoOperationCompleted(object arg) {
            if ((this.getLabelInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLabelInfoCompleted(this, new getLabelInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://yourcompany.com/", ResponseNamespace="http://yourcompany.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string updateLabelInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0) {
            object[] results = this.Invoke("updateLabelInfo", new object[] {
                        arg0});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateLabelInfoAsync(string arg0) {
            this.updateLabelInfoAsync(arg0, null);
        }
        
        /// <remarks/>
        public void updateLabelInfoAsync(string arg0, object userState) {
            if ((this.updateLabelInfoOperationCompleted == null)) {
                this.updateLabelInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateLabelInfoOperationCompleted);
            }
            this.InvokeAsync("updateLabelInfo", new object[] {
                        arg0}, this.updateLabelInfoOperationCompleted, userState);
        }
        
        public void OnupdateLabelInfoOperationCompleted(object arg) {
            if ((this.updateLabelInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateLabelInfoCompleted(this, new updateLabelInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        public bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void sayHiCompletedEventHandler(object sender, sayHiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sayHiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        public object[] results;
        
        internal sayHiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getLabelInfoCompletedEventHandler(object sender, getLabelInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLabelInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        public object[] results;
        
        internal getLabelInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void updateLabelInfoCompletedEventHandler(object sender, updateLabelInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateLabelInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        public object[] results;
        
        internal updateLabelInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591